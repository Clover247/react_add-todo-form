{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","findUserById","usersFromServer","find","todosWithUsers","userId","App","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","newTodos","setNewTodos","action","method","onSubmit","e","preventDefault","newTodo","Math","max","prevState","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05263881.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nconst findUserById = (id: number) => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n\nconst todosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const [newTodos, setNewTodos] = useState<Todo[]>(todosWithUsers);\n\n  const handleTitleInput = ((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  });\n\n  const handleUserSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = ((e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!title && !userId) {\n      setHasTitleError(!hasTitleError);\n      setHasUserError(!hasUserError);\n\n      return;\n    }\n\n    if (!title) {\n      setHasTitleError(!hasTitleError);\n\n      return;\n    }\n\n    if (!userId) {\n      setHasUserError(!hasUserError);\n\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...newTodos.map(todo => todo.id)) + 1,\n      title,\n      userId,\n      completed: false,\n      user: findUserById(userId),\n    };\n\n    setNewTodos(prevState => [...prevState, newTodo]);\n    setTitle('');\n    setUserId(0);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a Title\"\n            value={title}\n            onChange={handleTitleInput}\n          />\n\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}